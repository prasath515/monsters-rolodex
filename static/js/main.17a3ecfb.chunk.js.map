{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","console","log","monster","className","src","id","alt","name","email","CardList","m","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","resp","json","users","catch","err","this","filteredMonster","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAIaA,G,YAAO,SAAAC,GAEhB,OADAC,QAAQC,IAAIF,EAAMG,SAElB,sBAAKC,UAAU,iBAAf,UACI,qBACIC,IAAG,+BAA0BL,EAAMG,QAAQG,GAAxC,aACHC,IAAI,YAER,mCAAMP,EAAMG,QAAQK,KAApB,OACA,kCAAKR,EAAMG,QAAQM,MAAnB,YCIKC,EAAW,SAAAV,GACpB,IAAIW,EAAIX,EAAMY,SACd,OACI,qBAAKR,UAAU,YAAf,SAEQO,EAAEE,KAAI,SAAAV,GAAO,OACT,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,UClB1BQ,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACrB,8BACI,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAcA,EACdG,SAAWF,QCuCRG,G,wDAzCX,aAAe,IAAD,8BACV,gBAaJH,aAAe,SAACI,GACZ,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACTb,SAAU,GACVU,YAAa,IAJP,E,gEAOO,IAAD,OAChBI,MAAM,8CACDC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,SAAUkB,OACxCC,OAAM,SAAAC,GAAG,OAAI/B,QAAQC,IAAI,iC,+BAOxB,IAAD,EAE6B+B,KAAKR,MAA/Bb,EAFH,EAEGA,SAAUU,EAFb,EAEaA,YACZY,EAAkBtB,EAASuB,QAAO,SAAAhC,GAAO,OAAIA,EAAQK,KAAK4B,cAAcC,SAASf,EAAYc,kBAEnG,OAEI,sBAAKhC,UAAU,MAAf,UACI,kDACA,cAAC,EAAD,CACIW,YAAY,kBACZC,aAAgBiB,KAAKjB,eAGzB,cAAC,EAAD,CACIJ,SAAUsB,W,GAlCZI,cCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.17a3ecfb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.style.css';\r\n\r\nexport const Card = props => { \r\n    console.log(props.monster);\r\n    return(\r\n    <div className='card-container'>\r\n        <img\r\n            src={`https://robohash.org/${props.monster.id}?set=set2`}\r\n            alt='monster'\r\n        />\r\n        <h3> {props.monster.name} </h3>\r\n        <p> {props.monster.email} </p>\r\n    </div>\r\n);\r\n};","import React from \"react\";\r\n\r\nimport './card-list.stylr.css';\r\n\r\nimport { Card } from '../card/card.component'\r\n\r\n// export const CardList = props => (\r\n\r\n//     <div className='card-list' >\r\n//         {\r\n//             props.monsters.map(monster => (\r\n//                 <Card key={monster.id} monster={monster} />\r\n//             ))\r\n//         }\r\n//     </div>\r\n// );\r\n\r\nexport const CardList = props => {\r\n    var m = props.monsters;\r\n    return (\r\n        <div className='card-list' >\r\n            {\r\n                m.map(monster => (\r\n                    <Card key={monster.id} monster={monster} />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n};","import React from 'react';\r\n\r\nimport './search-box.style.css'\r\n\r\n\r\nexport const SearchBox = ({placeholder,handleChange}) => (\r\n    <div >\r\n        <input\r\n            className='search'\r\n            type='search'\r\n            placeholder= {placeholder}\r\n            onChange= {handleChange}\r\n        />\r\n    </div>\r\n);","import React, { Component } from 'react';\n\nimport { CardList } from './components/card-list/card-list.component';\n\nimport { SearchBox } from './components/search-box/search-box.component'\n\nimport './App.css';\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            monsters: [],\n            searchField: ''\n        };\n    }\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(resp => resp.json())\n            .then(users => this.setState({ monsters: users }))\n            .catch(err => console.log('found error in Users API'));\n    }\n\n    handleChange = (e) => {\n        this.setState({ searchField: e.target.value })\n    }\n\n    render() {\n\n        const { monsters, searchField } = this.state;\n        const filteredMonster = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n\n        return (\n\n            <div className=\"App\">\n                <h1>Monsters Rolodex</h1>\n                <SearchBox\n                    placeholder='search monsters'\n                    handleChange= { this.handleChange }\n                />\n\n                <CardList\n                    monsters={filteredMonster}\n                />\n\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}